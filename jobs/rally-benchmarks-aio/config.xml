<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>#!/usr/bin/env groovy
// *******************************
stage &apos;Remove Rally&apos;
// *******************************

echo &apos;Provisioning an onMetal server and preparing it to run OSA&apos;
node(&apos;josh-aio-ansible-temp&apos;) {
    sh &quot;&quot;&quot;
      cd
      sudo rm -R rally/
    &quot;&quot;&quot;
}

// *******************************
stage &apos;Install Rally&apos;
// *******************************

echo &apos;Provisioning an onMetal server and preparing it to run OSA&apos;
node(&apos;josh-aio-ansible-temp&apos;) {
    sh &quot;&quot;&quot;
      cd
      sudo git clone https://github.com/openstack/rally.git
      cd rally/
      sudo ./install_rally.sh
    &quot;&quot;&quot;
}

// *******************************
stage &apos;Run Prime Jobs&apos;
// *******************************
echo &apos;Provisioning an onMetal server and preparing it to run OSA&apos;
node(&apos;josh-aio-ansible-temp&apos;) {
  sh &quot;&quot;&quot;
      cd
      ls -a
      source openrc
      rally deployment create —fromenv —name=existing
      git clone https://github.com/jwatford/rally-scenarios.git
      cd rally_scenarios/
      rally task start osic-keystone-prime-scenario.json --task-args-file args.yaml
      rally task start osic-nova-1-server-scenario.json --task-args-file args.yaml
      
  &quot;&quot;&quot;
}


// *******************************
stage &apos;Run Benchmarks&apos;
// *******************************
echo &apos;Provisioning an onMetal server and preparing it to run OSA&apos;
node(&apos;josh-aio-ansible-temp&apos;) {
    sh &quot;&quot;&quot;
        cd
        cd rally-scenarios/
        rally deployment use --deployment existing
        rally task start benchmark.json --task-args-file args.yaml
        rally task report --junit --out results.xml
        rally task report --html-static --out results.html
        rally task results  &gt; results.json
    &quot;&quot;&quot;
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>