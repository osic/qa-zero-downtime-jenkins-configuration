<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description>Used to run pipeline tests</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>def osa, common, bme
String workspace_dir
String onmetal_ip, elasticsearch_ip, elasticsearch_pkey

def start_during_upgrade_test(controller_name=&apos;controller01&apos;) {
    String host_ip = get_deploy_node_ip()
    String container_ip = get_controller_utility_container_ip(controller_name)
    String tempest_dir = get_tempest_dir(controller_name)
    // Start during upgrade tests on the utility container on ${controller}
    sh &quot;&quot;&quot;
        ssh -o StrictHostKeyChecking=no\
        -o ProxyCommand=&apos;ssh -W %h:%p root@${host_ip}&apos; root@${container_ip} &apos;&apos;&apos;
            TEMPEST_DIR=${tempest_dir}
            cd \$TEMPEST_DIR
            cd rolling-upgrades-during-test
            python call_test.py --daemon --output-file \$TEMPEST_DIR/output
        &apos;&apos;&apos; &amp;
    &quot;&quot;&quot;
}

// *******************************
stage(&apos;Pre-Deployment -- Load Libs&apos;){
// *******************************
    node(&apos;bme-jenkins-slave-n01&apos;) {
        // Load the external functions using master since the git command
        // might not be available at the agent yet
        fileLoader.withGit(&apos;https://github.com/osic/qe-jenkins-baremetal.git&apos;, &apos;master&apos;, null, &apos;&apos;) {
            common = fileLoader.load(&apos;jenkins/common.groovy&apos;);
            osa = fileLoader.load(&apos;jenkins/osa_onmetal.functions.groovy&apos;);
            bme = fileLoader.load(&apos;jenkins/bme.functions.groovy&apos;);
        }
        git &apos;https://github.com/osic/qe-jenkins-baremetal.git&apos;
    }

    node(&apos;elasticsearch&apos;) {
        echo &apos;Get the server information&apos;
        elasticsearch_ip = common.get_server_ip()
        elasticsearch_pkey = common.get_server_public_key()
    }
}

stage(&apos;Pre-Deployment -- Configure Network on Jenkins Build Node&apos;){
    node(&apos;bme-jenkins-slave-n01&apos;) {
        withCredentials([[$class: &apos;UsernamePasswordMultiBinding&apos;, credentialsId: &apos;b4df0136-d403-4e1c-a62b-10d751505d77&apos;,
        usernameVariable: &apos;CLOUD_USER&apos;, passwordVariable: &apos;CLOUD_PASS&apos;]]) {
            bme.connect_vpn(&quot;72.32.87.87&quot;, &quot;${CLOUD_USER}&quot;, &quot;${CLOUD_PASS}&quot;)

            echo &apos;Configure ansible hosts file for SSH&apos;
            sh &quot;&quot;&quot;
                echo &quot;[deploy_node]&quot; &gt; hosts
                echo &quot;intelci-node ansible_ssh_host=172.24.0.21 ansible_ssh_user=root&quot; &gt;&gt; hosts
            &quot;&quot;&quot;

        }
    }
}



node(&apos;bme-jenkins-slave-n01&apos;){
    stage(&apos;test&apos;){
        bme.start_during_upgrade_test(&quot;infra01&quot;)
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>