<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.9">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>REBUILD_SERVER</name>
          <description>Rebuild server</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>UPGRADE</name>
          <description>Run upgrade to stable/ocata</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_UPGRADE</name>
          <description>run tempest smoke tests</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.23">
    <script>// *******************************
stage &apos;Post-Deployment Validation&apos;
// *******************************

echo &apos;Running tests to validate the OpenStack deployment&apos;
node(&apos;qe-ci-aio-1&apos;) {
    echo &apos;Waiting for cloud-init to finish setting up the VM...&apos;
    timeout(10) {
        waitUntil {
            def cloud_init = readFile(&apos;/var/log/cloud-init-output.log&apos;)
            def matcher = cloud_init =~ &apos;Cloud-init .* finished&apos;
            matcher ? true : false
        }
        echo &apos;Cloud-init completed. VM Initialized.&apos;
    }
	sh &apos;&apos;&apos;
		 sudo usermod -U root
		 sudo chmod 0700 /root/.ssh
		 sudo cp /home/ubuntu/.ssh/authorized_keys /root/.ssh/authorized_keys
		 sudo chown root. /root/.ssh/authorized_keys
		 sudo chmod 0600 /root/.ssh/authorized_keys
	&apos;&apos;&apos;
	sh &apos;&apos;&apos;
	     sudo su
	     cd /opt/openstack-ansible
         git checkout stable/ocata
         git pull
         scripts/bootstrap-ansible.sh
         mv ansible-role-requirments.yml{,.bak} || echo &quot;file no exist&quot;
         wget \\\&quot;https://gist.githubusercontent.com/dankolbrs/6224de079f4815838e6d2fb12943d083/raw/d9043e572613578a2c04ce9514c52a8a96b24802/ansible-role-requirements.yml\\\&quot;
         cat ansible-role-requirements.yml
         export TERM=xterm
         export I_REALLY_KNOW_WHAT_I_AM_DOING=true
         echo &quot;YES&quot; | bash scripts/run-upgrade.sh
	&apos;&apos;&apos;
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
</flow-definition>